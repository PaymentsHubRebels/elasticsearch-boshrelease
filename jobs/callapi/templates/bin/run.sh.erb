#!/usr/bin/env bash

set -euf -o pipefail

<%
es_link = link('elasticsearch')
protocol = es_link.p('elasticsearch.client.protocol', 'http')
url="#{protocol}://"
username = es_link.p('elasticsearch.client.username', nil)
password = es_link.p('elasticsearch.client.password', nil)
if username && password
  url += "#{username}:#{password}@"
end
host = es_link.instances.first.address
url += host
port = es_link.p('elasticsearch.client.port', nil)
if port
  url += ":#{port}"
end
%>

function request_elk {
    local action=$1
    local endpoint=$2
    local headers=$3
    local body=$4
    local url=<%= url %>

    curl -s -X "$action" "${headers}" -k "${url}${endpoint}" -d "$body"
}

<%
if_p('calls') do |api_calls|
  api_calls.each do |api_call|

  rendered_headers = api_call.fetch("headers").map{|header| "-H #{header.keys[0]}: #{header.values[0]}"}.join(" ")
%>
request_elk <%= api_call.fetch("action") %> <%= api_call.fetch("endpoint") %> '<%= rendered_headers %>' '<%= api_call.fetch("payload") %>'
<%
  end
end
%>